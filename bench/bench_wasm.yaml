lang: wasm
problems:
  - name: helloworld
    source:
      - 1.rs
  - name: binarytrees
    source:
      - 3.rs
      - 4.rs
      - 5.rs
  - name: merkletrees
    source:
      - 1.rs
  - name: nbody
    source:
      - 1.rs
      - 2.rs
  - name: spectral-norm
    source:
      - 2.rs
      - 7.rs
  - name: mandelbrot
    source:
      - 8.rs
  - name: fasta
    source:
      - 1.rs
  - name: fannkuch-redux
    source:
      - 1.rs
  - name: pidigits
    source:
      # - 1.rs
      - 2.rs
  - name: edigits
    source:
      - 1.rs
  - name: coro-prime-sieve
    source:
      - 3.rs
  - name: nsieve
    source:
      - 1.rs
      - 2.rs
  - name: lru
    source:
      - 1.rs
  - name: secp256k1
    source:
      - 1.rs
source_rename_to: main.rs
compiler_version_command:
runtime_version_parameter:
environments:
  - os: linux
    compiler: wasmer/llvm
    enabled: false
    version: latest
    compiler_version_command: wasmer --version
    runtime_version_parameter:
    env:
      RUSTFLAGS: -C target-feature=+simd128
    include: rust-wasm
    include_sub_dir: src
    before_build:
      - cargo build --release --target wasm32-wasi --target-dir /tmp/rustwasm/target
    build: wasmer create-exe --llvm --enable-all -o out/app /tmp/rustwasm/target/wasm32-wasi/release/_app.wasm
    out_dir: out
    run_cmd: app
  - os: linux
    compiler: wasmtime
    version: latest
    compiler_version_command:
    runtime_version_parameter: --version
    env:
      RUSTFLAGS: -C target-feature=+simd128
    include: rust-wasm
    include_sub_dir: src
    before_build:
      - cargo build --release --target wasm32-wasi --target-dir /tmp/rustwasm/target
    build: mv /tmp/rustwasm/target/wasm32-wasi/release/_app.wasm out
    out_dir: out
    run_cmd: wasmtime run _app.wasm
    runtime_included: false
  - os: linux
    compiler: node
    version: latest
    enabled: false
    compiler_version_command:
    runtime_version_parameter: --version
    include: rust-wasm
    include_sub_dir: src
    before_build:
      - cargo build --release --target wasm32-wasi --target-dir /tmp/rustwasm/target
    build: mv /tmp/rustwasm/target/wasm32-wasi/release/_app.wasm out && cp wrapper.js out
    out_dir: out
    run_cmd: node --experimental-wasi-unstable-preview1 --experimental-wasm-modules wrapper.js
    runtime_included: false
  - os: linux
    enabled: false
    compiler: deno
    version: latest
    enabled: false
    compiler_version_command: deno --version
    runtime_version_parameter:
    env:
      RUSTFLAGS: -C target-feature=+simd128
    include: rust-wasm
    include_sub_dir: src
    before_build:
      - cargo build --release --target wasm32-wasi --target-dir /tmp/rustwasm/target
      - deno bundle --unstable wrapper.ts app.ts
    build: deno compile --no-check --unstable --allow-env --allow-read -o out/app app.ts
    after_build:
      - mv /tmp/rustwasm/target/wasm32-wasi/release/_app.wasm out
    out_dir: out
    run_cmd: app --
